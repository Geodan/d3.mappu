!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){exports.POINT=1,exports.LINESTRING=2,exports.POLYGON=3,exports.MULTIPOINT=4,exports.MULTILINESTRING=5,exports.MULTIPOLYGON=6,exports.COLLECTION=7},{}],2:[function(require,module,exports){function ReadVarInt64(ta_struct){for(var nByte,cursor=ta_struct.cursor,nVal=0,nShift=0;;){if(nByte=ta_struct.buffer[cursor],0===(128&nByte))return cursor++,ta_struct.cursor=cursor,nVal|nByte<<nShift;nVal|=(127&nByte)<<nShift,cursor++,nShift+=7}}function ReadVarSInt64(ta_struct){var nVal=ReadVarInt64(ta_struct);return unzigzag(nVal)}function unzigzag(nVal){return 0===(1&nVal)?nVal>>1:-(nVal>>1)-1}exports.ReadVarInt64=ReadVarInt64,exports.ReadVarSInt64=ReadVarSInt64,exports.unzigzag=unzigzag},{}],3:[function(require,module,exports){function read(buffer,offset,limit){limit=limit||Number.MAX_VALUE;for(var ta_struct={buffer:buffer,cursor:void 0===offset?0:offset,bufferLength:buffer.byteLength||buffer.length,refpoint:new Int32Array(4)},data=[],c=0;ta_struct.cursor<ta_struct.bufferLength&&limit>c;){var res=readBuffer(ta_struct,limit);res.length>0?data.push({type:ta_struct.type,offset:limit<Number.MAX_VALUE?ta_struct.cursor:void 0,bbox:ta_struct.has_bbox?ta_struct.bbox:void 0,coordinates:res}):(res.bbox=ta_struct.has_bbox?ta_struct.bbox:void 0,data.push(res)),c++}return data}var readBuffer=require("./readBuffer");module.exports=read},{"./readBuffer":4}],4:[function(require,module,exports){function readBuffer(ta_struct,howMany){var flag,has_z=0,has_m=0;flag=ta_struct.buffer[ta_struct.cursor],ta_struct.cursor++;var precision_xy=unzigzag((240&flag)>>4);ta_struct.type=15&flag,ta_struct.factors=[],ta_struct.factors[0]=ta_struct.factors[1]=Math.pow(10,precision_xy),flag=ta_struct.buffer[ta_struct.cursor],ta_struct.cursor++,ta_struct.has_bbox=1&flag,ta_struct.has_size=(2&flag)>>1,ta_struct.has_idlist=(4&flag)>>2,ta_struct.is_empty=(16&flag)>>4;var extended_dims=(8&flag)>>3;if(extended_dims){var extended_dims_flag=ta_struct.buffer[ta_struct.cursor];ta_struct.cursor++,has_z=1&extended_dims_flag,has_m=(2&extended_dims_flag)>>1;var precision_z=(28&extended_dims_flag)>>2,precision_m=(224&extended_dims_flag)>>5;has_z&&(ta_struct.factors[2]=Math.pow(10,precision_z)),has_m&&(ta_struct.factors[2+has_z]=Math.pow(10,precision_m)),ta_struct.has_z=has_z,ta_struct.has_m=has_m}var ndims=2+has_z+has_m;if(ta_struct.ndims=ndims,ta_struct.has_size&&(ta_struct.size=ReadVarInt64(ta_struct)),ta_struct.has_bbox){for(var bbox=[],i=0;ndims-1>=i;i++){var min=ReadVarSInt64(ta_struct),max=min+ReadVarSInt64(ta_struct);bbox[i]=min,bbox[i+ndims]=max}ta_struct.bbox=bbox}return readObjects(ta_struct,howMany)}function readObjects(ta_struct,howMany){for(var type=ta_struct.type,i=0;i<ta_struct.ndims;i++)ta_struct.refpoint[i]=0;if(type===constants.POINT)return parse_point(ta_struct);if(type===constants.LINESTRING)return parse_line(ta_struct);if(type===constants.POLYGON)return parse_polygon(ta_struct);if(type===constants.MULTIPOINT)return parse_multi(ta_struct,parse_point);if(type===constants.MULTILINESTRING)return parse_multi(ta_struct,parse_line);if(type===constants.MULTIPOLYGON)return parse_multi(ta_struct,parse_polygon);if(type===constants.COLLECTION)return parse_collection(ta_struct,howMany);throw new Error("Unknown type: "+type)}function parse_point(ta_struct){return read_pa(ta_struct,1)}function parse_line(ta_struct){const npoints=ReadVarInt64(ta_struct);return read_pa(ta_struct,npoints)}function parse_polygon(ta_struct){for(var coordinates=[],nrings=ReadVarInt64(ta_struct),ring=0;nrings>ring;++ring)coordinates[ring]=parse_line(ta_struct);return coordinates}function parse_multi(ta_struct,parser){var type=ta_struct.type,ngeoms=ReadVarInt64(ta_struct),geoms=[],IDlist=[];ta_struct.has_idlist&&(IDlist=readIDlist(ta_struct,ngeoms));for(var i=0;ngeoms>i;i++){var geo=parser(ta_struct);geoms.push(geo)}return{type:type,ids:IDlist,geoms:geoms}}function parse_collection(ta_struct,howMany){var type=ta_struct.type,ngeoms=ReadVarInt64(ta_struct),geoms=[],IDlist=[];ta_struct.has_idlist&&(IDlist=readIDlist(ta_struct,ngeoms));for(var i=0;ngeoms>i&&howMany>i;i++){var geo=readBuffer(ta_struct);geoms.push({type:ta_struct.type,coordinates:geo})}return{type:type,ids:IDlist,ndims:ta_struct.ndims,offset:howMany<Number.MAX_VALUE?ta_struct.cursor:void 0,geoms:geoms}}function read_pa(ta_struct,npoints){var i,j,ndims=ta_struct.ndims,factors=ta_struct.factors,coords=new Array(npoints*ndims);for(i=0;npoints>i;i++)for(j=0;ndims>j;j++)ta_struct.refpoint[j]+=ReadVarSInt64(ta_struct),coords[ndims*i+j]=ta_struct.refpoint[j]/factors[j];if(ta_struct.include_bbox&&!ta_struct.has_bbox)for(i=0;npoints>i;i++)for(j=0;ndims>j;j++){const c=coords[j*ndims+i];c<ta_struct.bbox.min[j]&&(ta_struct.bbox.min[j]=c),c>ta_struct.bbox.max[j]&&(ta_struct.bbox.max[j]=c)}return coords}function readIDlist(ta_struct,n){const idList=[];for(var i=0;n>i;i++)idList.push(ReadVarSInt64(ta_struct));return idList}var constants=require("./constants"),ReadVarInt64=require("./protobuf").ReadVarInt64,ReadVarSInt64=require("./protobuf").ReadVarSInt64,unzigzag=require("./protobuf").unzigzag;module.exports=readBuffer},{"./constants":1,"./protobuf":2}],5:[function(require,module,exports){function createGeometry(type,coordinates){return{type:typeMap[type],coordinates:coordinates}}function createFeature(type,coordinates,id,ndims){return{type:"Feature",id:id,geometry:transforms[type](coordinates,ndims)}}function createFeaturesFromMulti(type,geoms,ids,ndims){return geoms.map(function(coordinates,i){return createFeature(type,coordinates,ids?ids[i]:void 0,ndims)})}function createFeaturesFromCollection(geoms,ids,ndims){return geoms.map(function(g,i){return createFeature(g.type,g.coordinates,ids?ids[i]:void 0,ndims)})}function toCoords(coordinates,ndims){for(var coords=[],i=0,len=coordinates.length;len>i;i+=ndims){for(var pos=[],c=0;ndims>c;++c)pos.push(coordinates[i+c]);coords.push(pos)}return coords}function toGeoJSON(buffer){for(var ta_struct={buffer:buffer,cursor:0,bufferLength:buffer.byteLength||buffer.length,refpoint:new Int32Array(4)},features=[];ta_struct.cursor<ta_struct.bufferLength;){var res=readBuffer(ta_struct,Number.MAX_VALUE);res.geoms?features=features.concat(transforms[res.type](res.geoms,res.ids,ta_struct.ndims)):features.push({type:"Feature",geometry:transforms[ta_struct.type](res,ta_struct.ndims)})}return{type:"FeatureCollection",features:features}}var constants=require("./constants"),readBuffer=require("./readBuffer"),typeMap={};typeMap[constants.POINT]="Point",typeMap[constants.LINESTRING]="LineString",typeMap[constants.POLYGON]="Polygon";var transforms={};transforms[constants.POINT]=function(coordinates,ndims){return createGeometry(constants.POINT,toCoords(coordinates,ndims)[0])},transforms[constants.LINESTRING]=function(coordinates,ndims){return createGeometry(constants.LINESTRING,toCoords(coordinates,ndims))},transforms[constants.POLYGON]=function(coordinates,ndims){return createGeometry(constants.POLYGON,coordinates.map(function(c){return toCoords(c,ndims)}))},transforms[constants.MULTIPOINT]=function(geoms,ids,ndims){return createFeaturesFromMulti(constants.POINT,geoms,ids,ndims)},transforms[constants.MULTILINESTRING]=function(geoms,ids,ndims){return createFeaturesFromMulti(constants.LINESTRING,geoms,ids,ndims)},transforms[constants.MULTIPOLYGON]=function(geoms,ids,ndims){return createFeaturesFromMulti(constants.POLYGON,geoms,ids,ndims)},transforms[constants.COLLECTION]=function(geoms,ids,ndims){return createFeaturesFromCollection(geoms,ids,ndims)},module.exports=toGeoJSON},{"./constants":1,"./readBuffer":4}],6:[function(require,module,exports){(function(global){var constants=require("./constants"),toGeoJSON=require("./toGeoJSON"),read=require("./read"),twkb={toGeoJSON:toGeoJSON,read:read};for(var key in constants)twkb[key]=constants[key];module.exports=twkb,global.twkb=twkb}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./constants":1,"./read":3,"./toGeoJSON":5}]},{},[6]);